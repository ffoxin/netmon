/******************************************************************************/
/*                                                                            */
/******************************************************************************/

#include <cstdlib>

#include "list.h"


/******************************************************************************/
/*                                                                            */
/******************************************************************************/
list_t list_init()
{
    list_t list = (list_t) malloc(sizeof(list_s));
    list->head = 0;
    list->tail = 0;

    return list;
}

/******************************************************************************/
/*                                                                            */
/******************************************************************************/
node_t list_add(list_t list, void *data)
{
    node_t next = (node_t) malloc(sizeof(node_s));

    next->data = data;
    next->next = 0;

    if (list->head == 0)
    {
        list->head = next;
    }

    if (list->tail != 0)
    {
        list->tail->next = next;
    }

    list->tail = next;

    return next;
}

/******************************************************************************/
/*                                                                            */
/******************************************************************************/
void list_clean(list_t list)
{
    node_t node = list->head;

    while (list->head)
    {
        list->tail = list->head;
        list->head = list->head->next;
        free(list->tail);
    }

    list->tail = 0;
}

/******************************************************************************/
/*                                                                            */
/******************************************************************************/
void list_destroy(list_t list)
{
    list_clean(list);
    free(list);
}

